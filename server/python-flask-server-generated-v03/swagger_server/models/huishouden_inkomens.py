# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.huishouden_bri import HuishoudenBri  # noqa: F401,E501
from swagger_server.models.huishouden_brp import HuishoudenBrp  # noqa: F401,E501
from swagger_server.models.huishouden_verklaring import HuishoudenVerklaring  # noqa: F401,E501
from swagger_server import util


class HuishoudenInkomens(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, jti: str=None, iat: int=None, nbf: int=None, exp: int=None, iss: str=None, aud: str=None, sub: str=None, brp: HuishoudenBrp=None, bri: HuishoudenBri=None, verklaring: HuishoudenVerklaring=None):  # noqa: E501
        """HuishoudenInkomens - a model defined in Swagger

        :param jti: The jti of this HuishoudenInkomens.  # noqa: E501
        :type jti: str
        :param iat: The iat of this HuishoudenInkomens.  # noqa: E501
        :type iat: int
        :param nbf: The nbf of this HuishoudenInkomens.  # noqa: E501
        :type nbf: int
        :param exp: The exp of this HuishoudenInkomens.  # noqa: E501
        :type exp: int
        :param iss: The iss of this HuishoudenInkomens.  # noqa: E501
        :type iss: str
        :param aud: The aud of this HuishoudenInkomens.  # noqa: E501
        :type aud: str
        :param sub: The sub of this HuishoudenInkomens.  # noqa: E501
        :type sub: str
        :param brp: The brp of this HuishoudenInkomens.  # noqa: E501
        :type brp: HuishoudenBrp
        :param bri: The bri of this HuishoudenInkomens.  # noqa: E501
        :type bri: HuishoudenBri
        :param verklaring: The verklaring of this HuishoudenInkomens.  # noqa: E501
        :type verklaring: HuishoudenVerklaring
        """
        self.swagger_types = {
            'jti': str,
            'iat': int,
            'nbf': int,
            'exp': int,
            'iss': str,
            'aud': str,
            'sub': str,
            'brp': HuishoudenBrp,
            'bri': HuishoudenBri,
            'verklaring': HuishoudenVerklaring
        }

        self.attribute_map = {
            'jti': 'jti',
            'iat': 'iat',
            'nbf': 'nbf',
            'exp': 'exp',
            'iss': 'iss',
            'aud': 'aud',
            'sub': 'sub',
            'brp': 'brp',
            'bri': 'bri',
            'verklaring': 'verklaring'
        }
        self._jti = jti
        self._iat = iat
        self._nbf = nbf
        self._exp = exp
        self._iss = iss
        self._aud = aud
        self._sub = sub
        self._brp = brp
        self._bri = bri
        self._verklaring = verklaring

    @classmethod
    def from_dict(cls, dikt) -> 'HuishoudenInkomens':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The huishouden_inkomens of this HuishoudenInkomens.  # noqa: E501
        :rtype: HuishoudenInkomens
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jti(self) -> str:
        """Gets the jti of this HuishoudenInkomens.


        :return: The jti of this HuishoudenInkomens.
        :rtype: str
        """
        return self._jti

    @jti.setter
    def jti(self, jti: str):
        """Sets the jti of this HuishoudenInkomens.


        :param jti: The jti of this HuishoudenInkomens.
        :type jti: str
        """

        self._jti = jti

    @property
    def iat(self) -> int:
        """Gets the iat of this HuishoudenInkomens.


        :return: The iat of this HuishoudenInkomens.
        :rtype: int
        """
        return self._iat

    @iat.setter
    def iat(self, iat: int):
        """Sets the iat of this HuishoudenInkomens.


        :param iat: The iat of this HuishoudenInkomens.
        :type iat: int
        """

        self._iat = iat

    @property
    def nbf(self) -> int:
        """Gets the nbf of this HuishoudenInkomens.


        :return: The nbf of this HuishoudenInkomens.
        :rtype: int
        """
        return self._nbf

    @nbf.setter
    def nbf(self, nbf: int):
        """Sets the nbf of this HuishoudenInkomens.


        :param nbf: The nbf of this HuishoudenInkomens.
        :type nbf: int
        """

        self._nbf = nbf

    @property
    def exp(self) -> int:
        """Gets the exp of this HuishoudenInkomens.


        :return: The exp of this HuishoudenInkomens.
        :rtype: int
        """
        return self._exp

    @exp.setter
    def exp(self, exp: int):
        """Sets the exp of this HuishoudenInkomens.


        :param exp: The exp of this HuishoudenInkomens.
        :type exp: int
        """

        self._exp = exp

    @property
    def iss(self) -> str:
        """Gets the iss of this HuishoudenInkomens.


        :return: The iss of this HuishoudenInkomens.
        :rtype: str
        """
        return self._iss

    @iss.setter
    def iss(self, iss: str):
        """Sets the iss of this HuishoudenInkomens.


        :param iss: The iss of this HuishoudenInkomens.
        :type iss: str
        """

        self._iss = iss

    @property
    def aud(self) -> str:
        """Gets the aud of this HuishoudenInkomens.


        :return: The aud of this HuishoudenInkomens.
        :rtype: str
        """
        return self._aud

    @aud.setter
    def aud(self, aud: str):
        """Sets the aud of this HuishoudenInkomens.


        :param aud: The aud of this HuishoudenInkomens.
        :type aud: str
        """

        self._aud = aud

    @property
    def sub(self) -> str:
        """Gets the sub of this HuishoudenInkomens.


        :return: The sub of this HuishoudenInkomens.
        :rtype: str
        """
        return self._sub

    @sub.setter
    def sub(self, sub: str):
        """Sets the sub of this HuishoudenInkomens.


        :param sub: The sub of this HuishoudenInkomens.
        :type sub: str
        """

        self._sub = sub

    @property
    def brp(self) -> HuishoudenBrp:
        """Gets the brp of this HuishoudenInkomens.


        :return: The brp of this HuishoudenInkomens.
        :rtype: HuishoudenBrp
        """
        return self._brp

    @brp.setter
    def brp(self, brp: HuishoudenBrp):
        """Sets the brp of this HuishoudenInkomens.


        :param brp: The brp of this HuishoudenInkomens.
        :type brp: HuishoudenBrp
        """

        self._brp = brp

    @property
    def bri(self) -> HuishoudenBri:
        """Gets the bri of this HuishoudenInkomens.


        :return: The bri of this HuishoudenInkomens.
        :rtype: HuishoudenBri
        """
        return self._bri

    @bri.setter
    def bri(self, bri: HuishoudenBri):
        """Sets the bri of this HuishoudenInkomens.


        :param bri: The bri of this HuishoudenInkomens.
        :type bri: HuishoudenBri
        """

        self._bri = bri

    @property
    def verklaring(self) -> HuishoudenVerklaring:
        """Gets the verklaring of this HuishoudenInkomens.


        :return: The verklaring of this HuishoudenInkomens.
        :rtype: HuishoudenVerklaring
        """
        return self._verklaring

    @verklaring.setter
    def verklaring(self, verklaring: HuishoudenVerklaring):
        """Sets the verklaring of this HuishoudenInkomens.


        :param verklaring: The verklaring of this HuishoudenInkomens.
        :type verklaring: HuishoudenVerklaring
        """

        self._verklaring = verklaring
